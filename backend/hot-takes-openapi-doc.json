{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "hot-takes-api",
    "description": "",
    "license": {
      "name": "ISC"
    }
  },
  "tags": [
    {
      "name": "auth",
      "description": "Everything about the authenthication"
    },
    {
      "name": "sauces",
      "description": "Everything about the sauces"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Connexion of a user",
        "description": "Check of the user identification informations, return the _id of the user from the database and a signed JSON web token (containing the _id of the user). The number of (failed) attempts to connect for a user is limited (in the time as well).\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string",
                      "description": "ID de l'utilisateur (depuis la base de données)"
                    },
                    "token": {
                      "type": "string",
                      "description": "token web JSON signé (contenant également l'ID de l'utilisateur)"
                    }
                  }
                },
                "example": {
                  "userId": "e5268c386c9b17c39bd6a17d",
                  "token": "..."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Creation of a new user",
        "description": "Hash the user password and add the user to the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "User creation message"
                },
                "example": "User created"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/sauces": {
      "get": {
        "tags": [
          "sauces"
        ],
        "summary": "Find all sauces",
        "description": "Returns an array of all the sauces in the database",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sauce"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sauces"
        ],
        "summary": "Creation of a new sauce",
        "description": "Capture and save the image, analyze the sauce (transformed into string) and  save it in the datbase (with the right imageUrl). Initialize likes and dislikes  of the sauce to 0, and usersLiked and usersDisliked with empty arrays. The initial request body is empty ; multer returns a string for the request body with the data submitted with the file.\n",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sauce": {
                    "$ref": "#/components/schemas/sauce-form"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "image to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Sauce creation message"
                },
                "example": "Sauce created"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/sauces/{id}": {
      "get": {
        "tags": [
          "sauces"
        ],
        "summary": "Find a sauce by ID",
        "description": "Returns the sauce with the given _id",
        "parameters": [
          {
            "$ref": "#/components/parameters/sauceIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sauce"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "sauces"
        ],
        "summary": "Modification of a sauce",
        "description": "Update the sauce with the _id submitted. If an image is uploaded, it is captured, and the imageUrl of the sauce is updated. If no file is submitted, the informations of the sauce are in the root of the request body. If a file is submitted, the sauce (string) is in req.body.sauce The initial raquest body is empty ; multer returns a string for the request body with the data submitted with the file.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/sauceIdParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sauce-form"
              },
              "example": {
                "name": "Oaxacan",
                "manufacturer": "Cajohns Fiery Foods Company",
                "description": "A sauce from Latin America",
                "mainPepper": "Black Pepper",
                "heat": 4,
                "userId": "e5268c386c9b17c39bd6a17d"
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sauce": {
                    "$ref": "#/components/schemas/sauce-form"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "image to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Sauce modification message"
                },
                "example": "Sauce updated"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sauces"
        ],
        "summary": "Deletion of a sauce",
        "description": "Delete the sauce with the given _id",
        "parameters": [
          {
            "$ref": "#/components/parameters/sauceIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Sauce deletion message"
                },
                "example": "Sauce deleted"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/sauces/{id}/like": {
      "post": {
        "tags": [
          "sauces"
        ],
        "summary": "Sets the like status of a sauce for a user",
        "description": "Define the \"like\" status of a given userId for a sauce If like = 1, the user likes the sauce. If like = 0, the user cancels its like or dislike (neutral). If like = -1, the user dislikes the sauce. The ID of the user is added (or removed) to the right array. A user can only have one (and only one) value for each sauce. The total number of likes and dislikes is updated after each new rating.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/sauceIdParam"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "ID of the user"
                  },
                  "like": {
                    "type": "number",
                    "description": "new like status of the sauce for the user (-1 dislike / 0 neutral / 1 like)",
                    "minimum": -1,
                    "maximum": 1,
                    "enum": [
                      -1,
                      0,
                      1
                    ]
                  }
                }
              },
              "example": {
                "userId": "e5268c386c9b17c39bd6a17d",
                "like": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Sauce like status update message"
                },
                "example": "Sauce like status updated"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "sauceIdParam": {
        "description": "Sauce ID",
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "description": "ID of the sauce"
        }
      }
    },
    "schemas": {
      "errorMessage": {
        "type": "string",
        "maxLength": 256,
        "description": "A text message describing an error",
        "example": "Error during the request processing"
      },
      "user": {
        "type": "object",
        "description": "data relative to a user (object structure -> user schema)",
        "properties": {
          "email": {
            "type": "string",
            "description": "e-mail adress of the user [unique]"
          },
          "password": {
            "type": "string",
            "description": "hashed user password"
          }
        }
      },
      "sauce": {
        "type": "object",
        "description": "data relative to a sauce (object structure -> sauce schema)",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ID of the sauce"
          },
          "userId": {
            "type": "string",
            "description": "ID of the user"
          },
          "name": {
            "type": "string",
            "description": "Name of the sauce"
          },
          "manufacturer": {
            "type": "string",
            "description": "Manufacturer of the sauce"
          },
          "description": {
            "type": "string",
            "description": "Description of the sauce"
          },
          "mainPepper": {
            "type": "string",
            "description": "Main pepper of the sauce"
          },
          "imageUrl": {
            "type": "string",
            "description": "image URL of the sauce"
          },
          "heat": {
            "type": "number",
            "description": "Heat number of the sauce",
            "minimum": 1,
            "maximum": 10
          },
          "likes": {
            "type": "number",
            "description": "Number of likes of the sauce",
            "minimum": 0
          },
          "dislikes": {
            "type": "number",
            "description": "Number of dislikes of the sauce",
            "minimum": 0
          },
          "usersLiked": {
            "type": "array",
            "description": "Array of users (user IDs) that likes the sauce",
            "items": {
              "type": "string",
              "description": "ID of a user that likes the sauce"
            },
            "minItems": 0
          },
          "usersDisliked": {
            "type": "array",
            "description": "Array of users (user IDs) that dislikes the sauce",
            "items": {
              "type": "string",
              "description": "ID of a user that likes the sauce"
            },
            "minItems": 0
          }
        },
        "example": {
          "_id": "b3c839e5176868cb62bdc179",
          "userId": "e5268c386c9b17c39bd6a17d",
          "name": "Oaxacan",
          "manufacturer": "Cajohns Fiery Foods Company",
          "description": "A sauce from Latin America",
          "mainPepper": "Black Pepper",
          "imageUrl": "http://localhost:3000/images/Sauce1_image_20220701_162713.jpg",
          "heat": 4,
          "likes": 2,
          "dislikes": 2,
          "usersLiked": [
            "173868cb179662bdc9e9e5c0",
            "e5268c386c9b17c39bd6a17d"
          ],
          "usersDisliked": [
            "6173868cb1792bdc9e0e56ba",
            "5173868cb17962bdc9d7e6b4"
          ]
        }
      },
      "sauce-form": {
        "type": "object",
        "description": "data to use to create the sauce (object structure -> sauce-form schema)",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the sauce"
          },
          "manufacturer": {
            "type": "string",
            "description": "Manufacturer of the sauce"
          },
          "description": {
            "type": "string",
            "description": "Description of the sauce"
          },
          "mainPepper": {
            "type": "string",
            "description": "Main pepper of the sauce"
          },
          "heat": {
            "type": "number",
            "description": "Heat number of the sauce",
            "minimum": 1,
            "maximum": 10
          },
          "userId": {
            "type": "string",
            "description": "ID of the user"
          }
        },
        "example": {
          "name": "Oaxacan",
          "manufacturer": "Cajohns Fiery Foods Company",
          "description": "A sauce from Latin America",
          "mainPepper": "Black Pepper",
          "heat": 4,
          "userId": "e5268c386c9b17c39bd6a17d"
        }
      }
    }
  }
}
